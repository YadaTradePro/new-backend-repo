"""Initial migration

Revision ID: 2993f4428236
Revises: 
Create Date: 2025-08-28 02:22:05.539700

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2993f4428236'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aggregated_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.String(length=10), nullable=False, comment='تاریخ گزارش به شمسی (YYYY-MM-DD)'),
    sa.Column('period_type', sa.String(length=20), nullable=False, comment='نوع دوره (daily, weekly, monthly, annual)'),
    sa.Column('signal_source', sa.String(length=50), nullable=False, comment='منبع سیگنال (Golden Key, Weekly Watchlist, overall)'),
    sa.Column('total_signals', sa.Integer(), nullable=False, comment='تعداد کل سیگنال\u200cها در دوره'),
    sa.Column('successful_signals', sa.Integer(), nullable=False, comment='تعداد سیگنال\u200cهای موفق در دوره'),
    sa.Column('win_rate', sa.Float(), nullable=False, comment='درصد برد سیگنال\u200cها'),
    sa.Column('total_profit_percent', sa.Float(), nullable=False, comment='درصد سود کل سیگنال\u200cهای موفق'),
    sa.Column('total_loss_percent', sa.Float(), nullable=False, comment='درصد زیان کل سیگنال\u200cهای ناموفق'),
    sa.Column('average_profit_per_win', sa.Float(), nullable=False, comment='میانگین سود هر سیگنال موفق'),
    sa.Column('average_loss_per_loss', sa.Float(), nullable=False, comment='میانگین زیان هر سیگنال ناموفق'),
    sa.Column('net_profit_percent', sa.Float(), nullable=False, comment='درصد سود/زیان خالص (سود کل + زیان کل)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='زمان ایجاد رکورد'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='زمان آخرین به\u200cروزرسانی رکورد'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_date', 'period_type', 'signal_source', name='_report_period_source_uc')
    )
    op.create_table('comprehensive_symbol_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=True),
    sa.Column('symbol_name', sa.String(length=100), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('isin', sa.String(length=12), nullable=True),
    sa.Column('market_type', sa.String(length=50), nullable=True),
    sa.Column('flow', sa.String(length=50), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('capital', sa.Float(), nullable=True),
    sa.Column('legal_shareholder_percentage', sa.Float(), nullable=True),
    sa.Column('real_shareholder_percentage', sa.Float(), nullable=True),
    sa.Column('float_shares', sa.Float(), nullable=True),
    sa.Column('base_volume', sa.Float(), nullable=True),
    sa.Column('group_name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('last_historical_update_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id')
    )
    op.create_table('potential_buy_queue_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('symbol_name', sa.String(length=255), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('jdate', sa.String(length=10), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('volume_change_percent', sa.Float(), nullable=True),
    sa.Column('real_buyer_power_ratio', sa.Float(), nullable=True),
    sa.Column('matched_filters', sa.Text(), nullable=True),
    sa.Column('group_type', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('probability_percent', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'jdate', name='_symbol_jdate_potential_queue_uc')
    )
    op.create_table('sentiment_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('news_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'date', name='_symbol_date_sentiment_uc')
    )
    op.create_table('stock_data',
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('symbol_name', sa.String(length=255), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('jdate', sa.String(length=10), nullable=False),
    sa.Column('open', sa.Float(), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.Column('final', sa.Float(), nullable=True),
    sa.Column('yesterday_price', sa.Float(), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('value', sa.BigInteger(), nullable=True),
    sa.Column('num_trades', sa.Integer(), nullable=True),
    sa.Column('plc', sa.Float(), nullable=True),
    sa.Column('plp', sa.Float(), nullable=True),
    sa.Column('pcc', sa.Float(), nullable=True),
    sa.Column('pcp', sa.Float(), nullable=True),
    sa.Column('mv', sa.BigInteger(), nullable=True),
    sa.Column('buy_count_i', sa.Integer(), nullable=True),
    sa.Column('buy_count_n', sa.Integer(), nullable=True),
    sa.Column('sell_count_i', sa.Integer(), nullable=True),
    sa.Column('sell_count_n', sa.Integer(), nullable=True),
    sa.Column('buy_i_volume', sa.BigInteger(), nullable=True),
    sa.Column('buy_n_volume', sa.BigInteger(), nullable=True),
    sa.Column('sell_i_volume', sa.BigInteger(), nullable=True),
    sa.Column('sell_n_volume', sa.BigInteger(), nullable=True),
    sa.Column('zd1', sa.Integer(), nullable=True),
    sa.Column('qd1', sa.BigInteger(), nullable=True),
    sa.Column('pd1', sa.Float(), nullable=True),
    sa.Column('zo1', sa.Integer(), nullable=True),
    sa.Column('qo1', sa.BigInteger(), nullable=True),
    sa.Column('po1', sa.Float(), nullable=True),
    sa.Column('zd2', sa.Integer(), nullable=True),
    sa.Column('qd2', sa.BigInteger(), nullable=True),
    sa.Column('pd2', sa.Float(), nullable=True),
    sa.Column('zo2', sa.Integer(), nullable=True),
    sa.Column('qo2', sa.BigInteger(), nullable=True),
    sa.Column('po2', sa.Float(), nullable=True),
    sa.Column('zd3', sa.Integer(), nullable=True),
    sa.Column('qd3', sa.BigInteger(), nullable=True),
    sa.Column('pd3', sa.Float(), nullable=True),
    sa.Column('zo3', sa.Integer(), nullable=True),
    sa.Column('qo3', sa.BigInteger(), nullable=True),
    sa.Column('po3', sa.Float(), nullable=True),
    sa.Column('zd4', sa.Integer(), nullable=True),
    sa.Column('qd4', sa.BigInteger(), nullable=True),
    sa.Column('pd4', sa.Float(), nullable=True),
    sa.Column('zo4', sa.Integer(), nullable=True),
    sa.Column('qo4', sa.BigInteger(), nullable=True),
    sa.Column('po4', sa.Float(), nullable=True),
    sa.Column('zd5', sa.Integer(), nullable=True),
    sa.Column('qd5', sa.BigInteger(), nullable=True),
    sa.Column('pd5', sa.Float(), nullable=True),
    sa.Column('zo5', sa.Integer(), nullable=True),
    sa.Column('qo5', sa.BigInteger(), nullable=True),
    sa.Column('po5', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'date')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('weekly_watchlist_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('signal_unique_id', sa.String(length=36), nullable=False),
    sa.Column('symbol', sa.String(length=50), nullable=False),
    sa.Column('symbol_name', sa.String(length=100), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('jentry_date', sa.String(length=10), nullable=False),
    sa.Column('outlook', sa.String(length=255), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('probability_percent', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('exit_date', sa.Date(), nullable=True),
    sa.Column('jexit_date', sa.String(length=10), nullable=True),
    sa.Column('profit_loss_percentage', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('signal_unique_id')
    )
    op.create_table('candlestick_pattern_detection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('jdate', sa.String(length=10), nullable=False),
    sa.Column('pattern_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'jdate', 'pattern_name', name='_symbol_jdate_pattern_uc')
    )
    op.create_table('financial_ratios_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('fiscal_year', sa.String(length=10), nullable=False),
    sa.Column('ratio_name', sa.String(length=100), nullable=False),
    sa.Column('ratio_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'fiscal_year', 'ratio_name', name='_symbol_fiscal_ratio_uc')
    )
    op.create_table('fundamental_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('eps', sa.Float(), nullable=True),
    sa.Column('pe', sa.Float(), nullable=True),
    sa.Column('group_pe_ratio', sa.Float(), nullable=True),
    sa.Column('psr', sa.Float(), nullable=True),
    sa.Column('p_s_ratio', sa.Float(), nullable=True),
    sa.Column('market_cap', sa.BigInteger(), nullable=True),
    sa.Column('base_volume', sa.BigInteger(), nullable=True),
    sa.Column('float_shares', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id')
    )
    op.create_table('golden_key_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('symbol_name', sa.String(length=100), nullable=False),
    sa.Column('jdate', sa.String(length=10), nullable=False),
    sa.Column('is_golden_key', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('satisfied_filters', sa.Text(), nullable=True),
    sa.Column('recommendation_price', sa.Float(), nullable=True),
    sa.Column('recommendation_jdate', sa.String(length=10), nullable=True),
    sa.Column('final_price', sa.Float(), nullable=True),
    sa.Column('profit_loss_percentage', sa.Float(), nullable=True),
    sa.Column('weekly_growth', sa.Float(), nullable=True, comment='Weekly growth percentage of the symbol'),
    sa.Column('status', sa.String(length=50), nullable=True, comment='Status of the signal (active, closed_profit, closed_loss, closed_neutral)'),
    sa.Column('probability_percent', sa.Float(), nullable=True, comment='Estimated probability of success for this signal'),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'jdate', name='_symbol_jdate_golden_key_uc')
    )
    op.create_table('ml_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('symbol_name', sa.String(length=255), nullable=False),
    sa.Column('prediction_date', sa.Date(), nullable=False, comment='Gregorian date when the prediction was made'),
    sa.Column('jprediction_date', sa.String(length=10), nullable=False, comment='Jalali date when the prediction was made (YYYY-MM-DD)'),
    sa.Column('prediction_period_days', sa.Integer(), nullable=True, comment='Number of days for the prediction horizon (e.g., 7 days)'),
    sa.Column('predicted_trend', sa.String(length=50), nullable=False, comment="Predicted trend: 'UP', 'DOWN', 'NEUTRAL'"),
    sa.Column('prediction_probability', sa.Float(), nullable=False, comment='Probability/confidence of the predicted trend (0.0 to 1.0)'),
    sa.Column('predicted_price_at_period_end', sa.Float(), nullable=True),
    sa.Column('actual_price_at_period_end', sa.Float(), nullable=True),
    sa.Column('actual_trend_outcome', sa.String(length=50), nullable=True, comment="Actual trend outcome: 'UP', 'DOWN', 'NEUTRAL'"),
    sa.Column('is_prediction_accurate', sa.Boolean(), nullable=True, comment='True if predicted_trend matches actual_trend_outcome'),
    sa.Column('signal_source', sa.String(length=50), nullable=True, comment="Source of the signal, e.g., 'ML-Trend'"),
    sa.Column('model_version', sa.String(length=50), nullable=True, comment='Version of the ML model used for prediction'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('signals_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('signal_id', sa.String(length=36), nullable=False, comment='Unique identifier for each signal'),
    sa.Column('symbol_id', sa.String(length=50), nullable=False, comment='Stock symbol ID (Persian short name)'),
    sa.Column('symbol_name', sa.String(length=255), nullable=False, comment='Stock symbol name'),
    sa.Column('signal_source', sa.String(length=50), nullable=False, comment='Source of the signal (e.g., Weekly Watchlist, Golden Key, Potential Buy Queue)'),
    sa.Column('entry_date', sa.Date(), nullable=False, comment='Gregorian entry date'),
    sa.Column('jentry_date', sa.String(length=10), nullable=False, comment='Jalali entry date (YYYY-MM-DD)'),
    sa.Column('entry_price', sa.Float(), nullable=False, comment='Price at signal entry'),
    sa.Column('outlook', sa.String(length=50), nullable=True, comment='Outlook of the signal (e.g., Bullish, Neutral)'),
    sa.Column('reason', sa.Text(), nullable=True, comment='Explanation for the signal'),
    sa.Column('probability_percent', sa.Float(), nullable=True, comment='Estimated probability of success'),
    sa.Column('exit_date', sa.Date(), nullable=True, comment='Gregorian exit date'),
    sa.Column('jexit_date', sa.String(length=10), nullable=True, comment='Jalali exit date (YYYY-MM-DD)'),
    sa.Column('exit_price', sa.Float(), nullable=True, comment='Price at signal exit'),
    sa.Column('profit_loss_percent', sa.Float(), nullable=True, comment='Calculated profit/loss percentage'),
    sa.Column('status', sa.String(length=50), nullable=True, comment='Status of the signal (active, closed_profit, closed_loss, closed_neutral)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='When the signal was first recorded'),
    sa.Column('evaluated_at', sa.DateTime(), nullable=True, comment='When performance was last evaluated'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='زمان آخرین به\u200cروزرسانی رکورد'),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('signal_id'),
    sa.UniqueConstraint('signal_id', name='_signal_id_uc')
    )
    op.create_table('technical_indicator_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('jdate', sa.String(length=10), nullable=False),
    sa.Column('close_price', sa.Float(), nullable=True),
    sa.Column('RSI', sa.Float(), nullable=True),
    sa.Column('MACD', sa.Float(), nullable=True),
    sa.Column('MACD_Signal', sa.Float(), nullable=True),
    sa.Column('MACD_Hist', sa.Float(), nullable=True),
    sa.Column('SMA_20', sa.Float(), nullable=True),
    sa.Column('SMA_50', sa.Float(), nullable=True),
    sa.Column('Bollinger_High', sa.Float(), nullable=True),
    sa.Column('Bollinger_Low', sa.Float(), nullable=True),
    sa.Column('Bollinger_MA', sa.Float(), nullable=True),
    sa.Column('Volume_MA_20', sa.Float(), nullable=True),
    sa.Column('ATR', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'jdate', name='_symbol_jdate_tech_uc')
    )
    op.create_table('tsetmc_filter_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.String(length=50), nullable=False),
    sa.Column('jdate', sa.String(length=10), nullable=False),
    sa.Column('filter_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['comprehensive_symbol_data.symbol_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol_id', 'jdate', 'filter_name', name='_symbol_jdate_filter_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tsetmc_filter_result')
    op.drop_table('technical_indicator_data')
    op.drop_table('signals_performance')
    op.drop_table('ml_predictions')
    op.drop_table('golden_key_results')
    op.drop_table('fundamental_data')
    op.drop_table('financial_ratios_data')
    op.drop_table('candlestick_pattern_detection')
    op.drop_table('weekly_watchlist_results')
    op.drop_table('user')
    op.drop_table('stock_data')
    op.drop_table('sentiment_data')
    op.drop_table('potential_buy_queue_results')
    op.drop_table('comprehensive_symbol_data')
    op.drop_table('aggregated_performance')
    # ### end Alembic commands ###
